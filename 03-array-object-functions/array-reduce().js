//reduce() dizideki tÃ¼m elemanlarÄ± alÄ±r, tek bir deÄŸer Ã¼retir:
//Bu bir toplam, Ã§arpÄ±m, ortalama, hatta string bile olabilir.
//reduce() diziyi deÄŸiÅŸtirmez, yeni bir deger dÃ¶ner

//const sonuc = dizi.reduce((toplayici, eleman, index) => {
//    return yeniDeger;
//  }, baslangicDegeri);

//| Terim             | AnlamÄ±                                 |
//| ----------------- | -------------------------------------- |
//| `toplayici`       | Ã–nceki adÄ±mdan gelen toplam / sonuÃ§    |
//| `eleman`          | Åžu anki eleman                         |
//| `index`           | (Ä°steÄŸe baÄŸlÄ±) ÅŸu anki sÄ±radaki indeks |
//| `baslangicDegeri` | Ä°lk deÄŸer (Ã¶rneÄŸin `0` veya `""`)      |

//sayÄ±larÄ± topla

const sayilar = [10, 20, 30, 45];
const toplam = sayilar.reduce((acc, sayi) => acc + sayi, 0); //baslangÄ±c deger acc=0 olarak baslar

console.log(toplam);

//acc â†’ accumulator yani "toplayÄ±cÄ±, biriktirici" :Reduce fonksiyonu iÃ§inde Ã¶nceki adÄ±ma kadar birikmiÅŸ deÄŸeri temsil eder.
//Her adÄ±mda deÄŸiÅŸir, gÃ¼ncellenir ve sonda nihai deÄŸeri dÃ¶ner.

//kelimeleri birlesitr
const kelimeler = ["Rana", "ve", "Åžeyma", "Ã¶ÄŸreniyor"];

const cumle = kelimeler.reduce((acc, kelime) => acc + " " + kelime, " ");
console.log(cumle);

//Ã–ÄŸrencilerin Not OrtalamasÄ±
const ogrenciler = [
  { ad: "Ali", not: 80 },
  { ad: "AyÅŸe", not: 90 },
  { ad: "Rana", not: 70 },
];
const toplamNot = ogrenciler.reduce((acc, ogr) => acc + ogr.not, 0); ////baslangÄ±c deger acc=0 olarak baslar
const ortalama = toplamNot / ogrenciler.length;

console.log(`ortalama not: ${ortalama}`);

//SayÄ±larÄ±n Ã‡arpÄ±mÄ±nÄ± Bul

const sayilar4 = [2, 3, 4];

const carpim = sayilar4.reduce((acc, sayi) => acc * sayi, 1);
console.log(carpim);

//stringleri birlstir

const harfler = ["R", "a", "n", "a", "ðŸ’›"];
const isim = harfler.reduce((acc, harf) => acc + harf, "");

console.log(isim);

//
const ogrenciler2 = [
  { ad: "Ali", not: 76 },
  { ad: "Åžeyma", not: 93 },
  { ad: "Rana", not: 88 },
];

const yukseknot = ogrenciler2.reduce((acc, ogr) => {
  return ogr.not > acc ? ogr.not : acc;
}, 0);
console.log(`En yÃ¼ksek not: ${yukseknot}`);

//
const sehirler = ["Ä°stanbul", "Ankara", "Ä°zmir", "Ankara", "Ä°stanbul"];
const sayac = sehirler.reduce((acc, sehir) => {
  acc[sehir] = (acc[sehir] | 0) + 1;
  return acc;
}, {});
console.log(sayac);

// ??
// ||
